{"version":3,"sources":["util/theme.js","store/context.js","util/index.js","components/entities/entity.js","components/entities/hostiles-grid.js","components/entities/hostiles.js","components/entities/friendlies-grid.js","components/entities/friendlies.js","components/footer/legend.js","components/footer/index.js","components/bg.js","components/main.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["getColor","colorId","store","color","black","grey","grey_light","white","blue","green","yellow","red","purple","shadow","z1","z2","z3","value","font","body","fancy","InitialState","level","score","StoreContext","React","createContext","generateFromWordList","requested","wordList","retVal","numEntries","length","i","push","Math","floor","random","matchWithinThisGroup","group","text","onError","filter","g","matchThisRegex","map","idx","str1","regexString","re","RegExp","match","e","message","console","error","S","Entity","styled","p","isMatched","css","baseColor","isKilled","isAttacked","Text","type","givenStyle","style","Grid","Row","HostilesGrid","getMatchedEntities","useContext","sortedGrid","useMemo","forEach","position","perRow","row","column","getGridPosition","posIdx","reverse","eR","marginLeft","width","DELTA_X","Swarm","ActiveText","isActive","Hostiles","useState","isMoving","setIsMoving","x","setX","yPos","direction","setDirection","windowWidth","setWindowWidth","activeText","counter","setCounter","timer","useRef","useEffect","current","setInterval","v","delay","window","addEventListener","innerWidth","clearInterval","minX","nextX","maxX","leftPos","topPos","realActiveText","left","top","FriendliesGrid","Friendlies","Legend","StatsGroup","Entry","getStats","entities","idxs1","idxs2","subEntities","includes","title","stats","matchedIdxs","killedIdxs","statsObj","hostile","friendly","Footer","Buttons","UiButton","LevelInfo","StartButton","PrevButton","NextButton","TextInput","Output","OutputText","OutputError","Available","ActiveExpressions","active","updateText","restartGame","submitText","nextLevel","prevLevel","activeExpressions","levelData","placeholder","onChange","target","onKeyDown","key","label","hostiles","onClick","a","Bg","Main","Input","numEnemies","enemies","Store","children","loaded","setLoaded","setText","setActiveText","setEntities","setMatchedIdxs","attackedIdxs","setAttackedIdxs","setKilledIdxs","killActive","setKillActive","setError","data","levels","levelDefinitions","expressions","levelIdx","setLevelIdx","setScore","activeHostiles","activeFriendlies","friendlies","generateEntities","useCallback","tE","concat","newDeaths","textTimer","startTextTimer","clearTimeout","setTimeout","setLevel","exp","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8beda92.chunk.js","sourcesContent":["export const listColors = () => {\n  return Object.keys(store.color);\n}\n\nexport const getColor = (colorId) => {\n  return store.color[colorId];\n}\n\nexport const getFont = (fontId) => {\n  return store.font[fontId];\n}\n\n/* from pablo on https://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors */\nexport const shadeColor = (colId, percent) => {\n  var color = store.color[colId] || colId;\n\n  var R = parseInt(color.substring(1,3),16);\n  var G = parseInt(color.substring(3,5),16);\n  var B = parseInt(color.substring(5,7),16);\n\n  R = parseInt(R * (100 + percent) / 100);\n  G = parseInt(G * (100 + percent) / 100);\n  B = parseInt(B * (100 + percent) / 100);\n\n  R = (R<255)?R:255;  \n  G = (G<255)?G:255;  \n  B = (B<255)?B:255;  \n\n  var RR = ((R.toString(16).length===1)?\"0\"+R.toString(16):R.toString(16));\n  var GG = ((G.toString(16).length===1)?\"0\"+G.toString(16):G.toString(16));\n  var BB = ((B.toString(16).length===1)?\"0\"+B.toString(16):B.toString(16));\n\n  return \"#\"+RR+GG+BB;\n}\n\nconst store = {\n  color:{\n    black: '#000000',\n    grey: '#373737',\n    grey_light: '#A39F8E',\n    white: '#fef8dd',\n    blue: '#1fb9f3',\n    green: '#51f249',\n    yellow: '#fff249',\n    red: '#F55658',\n    purple: '#6b1ff3'\n  },\n  shadow:{\n    z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\n    z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\n    z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\n  },\n  value:{},\n  font:{\n    body: `'Roboto Mono', monospace`,\n    fancy: `'Aldrich', sans-serif`\n  }\n}\n\nexport default store;\n","import React from 'react';\nexport const InitialState = {\n  level: 0,\n  score: 0\n};\nexport const StoreContext = React.createContext(InitialState);","const CHARACTERS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\nexport const generateFromWordList = (requested = -1, wordList) => {\n  let retVal = [];\n  let numEntries = requested;\n  if(requested < 0 || requested > wordList.length){\n    numEntries = wordList.length;\n  }\n  \n  for(let i = 0; i < numEntries; i++){\n    retVal.push( wordList[Math.floor(Math.random() * wordList.length)] );\n  }\n\n  return retVal;\n}\nexport const generateRandomTextEntries = (numEntries) => {\n  let retVal = [];\n  for(let i = 0; i < numEntries; i++){\n    retVal.push(generateRandomTextEntry());\n  }\n\n  return retVal;\n}\n\nexport const generateRandomTextEntry = (min = 3, max = 8) => {\n  const thisLength = min + Math.round(Math.random() * (max - min));\n  let retVal = [];\n  for(let i = 0; i < thisLength; i++){\n    retVal.push(getRandomFromString(CHARACTERS));\n  }\n\n  return retVal.join('');\n}\n\nconst getRandomFromString = str => {\n  return str[Math.floor(Math.random() * (str.length))]\n}\n\nexport const matchThisString = (str1, str2) => {\n  if(!str2){\n    return false;\n  }\n  if(str1.indexOf(str2) > -1){\n    return true;\n  }else{\n    return false;\n  }\n}\n\n/* assuming group is shape below, only return items with matching idx\n  [\n    {\n      idx:\n    }\n  ]\n*/\nexport const matchWithinThisGroup = (group, text, onError) => {\n  return group.filter(g => matchThisRegex(g.text, text, onError)).map(g => g.idx);\n}\n\n\nexport const matchThisRegex = (str1, regexString, onError) => {\n  if(!regexString){\n    return false;\n  }\n\n  try{\n    const re = new RegExp(regexString);\n    return str1.match(re);\n  }catch(e){\n    let message = `${regexString}`;\n    onError ? onError(message) : console.error(message);\n    return false;\n  }\n}\n\nexport const ENTITY_WIDTH = 150;\nexport const HOSTILES_PER_ROW = 4;\nexport const FRIENDLIES_PER_ROW = 3;\n\nexport const DEFAULT_COUNT_HOSTILES = 8;\nexport const DEFAULT_COUNT_FRIENDLIES = 6;","import styled, { css } from 'styled-components';\nimport { getColor } from '../../util/theme';\n\nconst S = {};\nS.Entity = styled('div')`\n  display:inline-block;\n  position:relative;\n\n  height: 100%;\n\n  padding: 1rem 2rem;\n\n  p{\n    border: 1px dashed;\n    white-space: pre; /* this allows \" \" to take up room */\n    border-top:0;\n    border-bottom:0;\n    padding: 0 .5rem;\n\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  ${p => p.isMatched ? css`\n    color: ${getColor('blue')};\n    border-color: ${getColor('blue')};\n    box-shadow: 0 0 .5rem .1rem ${getColor('blue')};\n    border: .25rem solid ${getColor('blue')};\n  `: css`\n    color: ${getColor(p.baseColor)};\n    border-color: ${getColor(p.baseColor)};\n    box-shadow: 0 0 .5rem .1rem ${getColor(p.baseColor)};\n    border: .25rem solid ${getColor(p.baseColor)};\n  `}\n\n  ${p => p.isKilled && css`\n    color: ${getColor('grey')};\n    border-color: ${getColor('grey')};\n    box-shadow: 0 0 .5rem .1rem ${getColor('grey')};\n    border: .25rem solid ${getColor('grey')};\n    opacity: .5;\n  `};\n\n  ${p => p.isAttacked && css`\n    color: ${getColor('white')};\n    border-color: ${getColor('white')};\n    box-shadow: 0 0 .5rem .1rem ${getColor('white')};\n    border: .25rem solid ${getColor('white')};\n    opacity: 1;\n  `};\n\n  transition: all .2s;\n\n  text-align:center;\n\n  img{\n    width:100%;\n    height:100%;\n  }\n`\nS.Text = styled('p')`\n\n`;\n\nfunction Entity({ type, text, isMatched, isAttacked, isKilled, givenStyle }) {\n  return (\n    <S.Entity \n      baseColor={type === 'hostile' ? 'red' : 'green'}\n      isMatched={isMatched} \n      style={givenStyle ? givenStyle : null}\n      isAttacked={isAttacked} \n      isKilled={isKilled} >\n      <S.Text>{`${text}`}</S.Text>\n    </S.Entity>\n  );\n}\n\nexport default Entity;\n","\nimport { useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { StoreContext } from '../../store/context';\nimport { ENTITY_WIDTH, HOSTILES_PER_ROW } from '../../util';\n\nimport Entity from './entity';\nconst SPACER_WIDTH = 50;\n\nconst S = {};\nS.Grid = styled('ul')`\n  padding:0;\n  margin:0;\n`\n\nconst getGridPosition = (idx, perRow = 3) => {\n  return {\n    row: Math.floor(idx / perRow),\n    column: idx % perRow\n  }\n}\n\nS.Row = styled('div')`\n  position:relative;\n  height:7rem;\n  margin-top:3rem;\n`\nfunction HostilesGrid() {\n  const { getMatchedEntities } = useContext(StoreContext);\n  \n  const sortedGrid = useMemo(() => {\n    let retVal = [];\n    getMatchedEntities('hostile').forEach(e => {\n      const position = getGridPosition(e.posIdx, HOSTILES_PER_ROW)\n      if(position.row >= retVal.length){\n        retVal.push([{\n          ...e,\n          row: position.row,\n          column: position.column\n        }]);\n      }else{\n        retVal[position.row].push({\n          ...e,\n          row: position.row,\n          column: position.column\n        });\n      }\n    });\n\n    return retVal.reverse();\n  }, [ getMatchedEntities ]);\n\n\n  return (\n    <S.Grid>\n      { sortedGrid.map((eR, i) => (\n        <S.Row key={`row-${i}`}>\n          { eR.map((e, i) => (\n            <Entity \n              key={`hostile-${i}`} \n              type=\"hostile\"\n              text={e.text} \n              idx={e.idx}\n              column={e.column}\n              posIdx={e.posIdx}\n              givenStyle={{\n                marginLeft: i !== 0 ? SPACER_WIDTH : null,\n                width: ENTITY_WIDTH \n              }}\n              isMatched={e.isMatched} \n              isAttacked={e.isAttacked}\n              isKilled={e.isKilled} />\n          )) }\n        </S.Row>\n      )) }\n    </S.Grid>\n  );\n}\n\nexport default HostilesGrid;\n","\nimport { useEffect, useContext, useState, useRef, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { StoreContext } from '../../store/context';\nimport { getColor } from '../../util/theme';\n\nimport HostilesGrid from './hostiles-grid';\n\nconst MAX_WIDTH = 750;\nconst DELTA_X = 50;\nconst HEIGHT = 25;\nconst BUFFER = 10;\nconst MOVE_TIME = 1000;\n\nconst S = {};\nS.Swarm = styled('div')`\n\n  position:absolute;\n  width:${MAX_WIDTH}px;\n  top:1rem;\n\n  /* animate movement */\n  ${'' /* transition: left .5s, top .5s; */}\n\n  >ul{\n    padding:0;\n    margin:0;\n  }\n`\n\nS.ActiveText = styled('p')`\n  color: ${getColor('white')};\n  text-align:center;\n  \n  ${p => p.isActive ? css`\n    margin-top:0;\n    opacity:1;\n  `:css`\n    margin-top:3rem;\n    opacity:0;\n  `}\n\n  transition: margin-top .2s, opacity .5s;\n`\n\nconst delay = 1;\nconst ALLOW_DESCEND = false;\n\nfunction Hostiles() {\n  const [ isMoving, setIsMoving ] = useState(false);\n  const [ x, setX ] = useState(0);\n  const [ yPos, setYPos ] = useState(0);\n  const [ direction, setDirection ] = useState(-1);\n  const [ windowWidth, setWindowWidth ] = useState(1000);\n  const { activeText } = useContext(StoreContext);\n  \n  const [counter, setCounter] = useState(0);\n  const timer = useRef(null); // we can save timer in useRef and pass it to child\n\n  useEffect(() => {\n    // useRef value stored in .current property\n    timer.current = setInterval(() => setCounter((v) => v + 1), delay * MOVE_TIME);\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth));\n    setWindowWidth(window.innerWidth);\n\n    // clear on component unmount\n    return () => {\n      clearInterval(timer.current);\n    };\n  }, []);\n\n  /* TODO: rework this whole thing - it's stupid */\n  useEffect(() => {\n    if(direction < 0){\n      /* movin LEFT */\n      let minX = 0 + BUFFER;\n      minX = minX + (minX % DELTA_X);\n\n      const nextX = (x - (x % DELTA_X)) - DELTA_X;\n      if(minX < nextX){\n        setX(nextX);\n      }else{\n        setDirection(1);\n        if(ALLOW_DESCEND) setYPos(yPos + 1);\n      }\n    }else if(direction > 0){\n      /* movin RIGHT */\n      let maxX = (windowWidth - MAX_WIDTH - BUFFER);\n      maxX = maxX - (maxX % DELTA_X)\n      const nextX = (x + DELTA_X) - (x % DELTA_X);\n      if(maxX > nextX){\n        setX(nextX);\n      }else{\n        setDirection(-1);\n        if(ALLOW_DESCEND) setYPos(yPos + 1);\n      }\n    }\n\n  }, [ windowWidth, counter, setDirection, setX ]);\n\n  const leftPos = useMemo(() => {\n    return x * 50;\n  }, [x]);\n\n  const topPos = useMemo(() => {\n    return yPos * HEIGHT;\n  }, [yPos]);\n\n  const realActiveText = useMemo(() => {\n    return activeText ? `ATTACKING: \"${activeText}\"` : ''\n  }, [activeText]);\n\n\n  useEffect(() => {\n    if(!isMoving){\n      setIsMoving(true);\n    }\n  }, [ isMoving, setIsMoving ]);\n\n  return (\n    <S.Swarm style={{ left: x, top: topPos }}>\n      <HostilesGrid />\n      <p>{leftPos}</p>\n      <S.ActiveText isActive={!!realActiveText}>{realActiveText}</S.ActiveText>\n    </S.Swarm>\n  );\n}\n\nexport default Hostiles;\n","\nimport { useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { StoreContext } from '../../store/context';\nimport { ENTITY_WIDTH, FRIENDLIES_PER_ROW } from '../../util';\n\nimport Entity from './entity';\n\nconst S = {};\nS.Grid = styled('div')`\n  padding:0;\n  margin:0;\n`\n\nconst getGridPosition = (idx, perRow = 3) => {\n  return {\n    row: Math.floor(idx / perRow),\n    column: idx % perRow\n  }\n}\n\nS.Row = styled('div')`\n  position:relative;\n  height:7rem;\n  margin-top:1rem;\n\n  display:flex;\n  justify-content: space-evenly; \n  >div{\n\n  }\n`\nfunction FriendliesGrid() {\n  const { getMatchedEntities } = useContext(StoreContext);\n\n  const sortedGrid = useMemo(() => {\n    let retVal = [];\n    getMatchedEntities('friendly').forEach(e => {\n      const position = getGridPosition(e.posIdx, FRIENDLIES_PER_ROW)\n      if(position.row >= retVal.length){\n        retVal.push([{\n          ...e,\n          row: position.row,\n          column: position.column\n        }]);\n      }else{\n        retVal[position.row].push({\n          ...e,\n          row: position.row,\n          column: position.column\n        });\n      }\n    });\n\n    return retVal.reverse();\n  }, [getMatchedEntities]);\n\n\n  return (\n    <S.Grid>\n\n      { sortedGrid.map((eR, i) => (\n        <S.Row key={`row-${i}`}>\n          { eR.map((e, i) => (\n            <Entity \n              key={`friendly-${i}`} \n              type={e.type}\n              text={e.text} \n              idx={e.idx}\n              posIdx={e.posIdx}\n              givenStyle={{\n                width: ENTITY_WIDTH\n              }}\n              isMatched={e.isMatched} \n              isAttacked={e.isAttacked}\n              isKilled={e.isKilled} />\n          )) }\n        </S.Row>\n      )) }\n    </S.Grid>\n  );\n}\n\nexport default FriendliesGrid;\n","\nimport styled from 'styled-components';\nimport FriendliesGrid from './friendlies-grid';\n\nconst S = {};\nS.Swarm = styled('div')`\n\n  position:absolute;\n  bottom:1rem;\n  width:100%;\n\n  >ul{\n    padding:0;\n    margin:0;\n  }\n`\n\nfunction Friendlies() {\n\n  return (\n    <S.Swarm>\n      <FriendliesGrid />\n    </S.Swarm>\n  );\n}\n\nexport default Friendlies;\n","\nimport { useContext, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { getColor } from '../../util/theme';\nimport { StoreContext } from '../../store/context';\n\nconst S = {};\nS.Legend = styled('div')`\n  color: ${getColor('white')};\n  font-size:1rem;\n  li{\n    display:block;\n    text-align:left;\n    padding-left:1rem;\n  }\n\n  ul{\n    margin:0;\n    padding:0;\n  }\n\n  text-align:left;\n\n  position:absolute;\n  left: 1rem;\n  top: 1rem;\n`;\n\nS.StatsGroup = styled('div')`\n  display:inline-block;\n  border: 1px solid ${getColor('white')};\n  padding:1rem;\n  ${p => p.type === 'friendly' ? css`\n    color: ${getColor('green')};\n  `:css`\n    color: ${getColor('red')};\n  `}\n`;\nS.Entry = styled('li')`\n  color: ${p => getColor(p.color)};\n`;\n\nconst getStats = (entities, type, idxs1, idxs2) => {\n  const subEntities = entities.filter(e => (e.type === type));\n  return [\n    subEntities.length,\n    subEntities.filter(e => idxs1.includes(e.idx)).length,\n    subEntities.filter(e => idxs2.includes(e.idx)).length\n  ]\n}\n\nfunction StatsGroup({type, title, stats}){\n  return (\n    <S.StatsGroup type={type}>\n      <h4>{title}</h4>\n      <ul>\n        <S.Entry color=\"white\">{`alive: ${stats[0] - stats[2]} `}</S.Entry>\n        <S.Entry color=\"white\">{`targeted: ${stats[1]} `}</S.Entry>\n        <S.Entry color=\"white\">{`dead: ${stats[2]} `}</S.Entry>\n      </ul>\n    </S.StatsGroup>\n  );\n}\n\nfunction Legend() {\n  const { entities, matchedIdxs, killedIdxs } = useContext(StoreContext);\n\n  const statsObj =  useMemo(() => {\n    return {\n      hostile: getStats(entities, 'hostile', matchedIdxs, killedIdxs),\n      friendly: getStats(entities, 'friendly', matchedIdxs, killedIdxs)\n    }\n  }, [entities, matchedIdxs, killedIdxs]);\n\n  return (\n    <S.Legend>\n      <StatsGroup type=\"hostile\" title=\"Hostiles\" stats={statsObj.hostile} />\n      <StatsGroup type=\"friendly\" title=\"Friendlies\" stats={statsObj.friendly} />\n    </S.Legend>\n  );\n}\n\nexport default Legend;\n","\nimport { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { getColor } from '../../util/theme';\nimport { StoreContext } from '../../store/context';\nimport Legend from './legend';\n\nconst S = {};\nS.Footer = styled('div')`\n  position:relative;\n\n  text-align:center;\n`;\n\nS.Buttons = styled('div')`\n  display: grid;\n  grid-template-columns: 15% 85%;\n  grid-template-rows: 40% 30% 30%;\n\n  right: 0;\n  top: 0;\n  position: absolute;\n  height:100%;\n  width: 30rem;\n`;\n\nS.UiButton = styled('div')`\n  font-size: 2.5rem;\n  text-align:center;\n  border: 2px solid ${getColor('grey')};\n  color: ${getColor('grey')};\n  cursor: pointer;\n  position:relative;\n\n  &:hover{\n    border: 2px solid ${getColor('blue')};\n    color: ${getColor('blue')};\n  }\n\n  >p{\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%, -50%);\n  }\n`;\n\nS.LevelInfo = styled(S.UiButton)`\n  font-size: 1.5rem;\n  line-height: 1.5rem;\n  grid-column: 1 / span 2;\n  grid-row: 1 / 1;\n`;\n\nS.StartButton = styled(S.UiButton)`\n  grid-column: 2;\n  grid-row: 2 / span 2;\n`;\n\nS.PrevButton = styled(S.UiButton)`\n  grid-column: 1;\n  grid-row: 2;\n`;\n\nS.NextButton = styled(S.UiButton)`\n  grid-column: 1;\n  grid-row: 3;\n`;\n\nS.TextInput = styled('input')`\n  height:4rem;\n  width: 50rem;\n  margin: 1rem;\n  color:  ${getColor('blue')};\n  border: 2px solid ${getColor('blue')};\n  background: ${getColor('black')};\n\n  font-size: 2.5rem;\n  padding: 2rem;\n  text-align:center;\n  cursor:pointer;\n\n\n  ::placeholder{\n    color: ${getColor('grey')};\n  }\n\n  &:focus{\n    outline: none !important;\n    border: 2px solid ${getColor('blue')};\n    box-shadow: 0 0 1rem ${getColor('blue')};\n\n    ::placeholder{\n      color: transparent;\n    }\n  }\n\n  ${p => p.error && css`\n    color:  ${getColor('red')};\n    border: 2px solid ${getColor('red')};\n\n    &:focus{\n      border: 2px solid ${getColor('red')};\n      box-shadow: 0 0 1rem ${getColor('red')};\n    }\n  `}\n\n`;\n\nS.Output = styled('div')`\n  margin-top:-.5rem;\n  font-size:1rem;\n`;\n\nS.OutputText = styled('div')`\n  color: ${getColor('white')}\n`;\n\nS.OutputError = styled('p')`\n  color: ${getColor('red')}\n`;\n\nS.Available = styled('div')`\n\n`\n\nS.ActiveExpressions = styled('p')`\n  font-size: 2.5rem;\n  display:inline-block;\n  color: ${getColor('grey')};\n  ${p => p.active && css`\n    color: ${getColor('white')};\n  `}\n`\n\nconst onKeyDown = (key, value, submitText) => {\n  if(key === 'Enter'){\n    submitText(value);\n  }\n}\n\nfunction Footer() {\n  const { updateText, restartGame, submitText, error, text, nextLevel, prevLevel, activeExpressions } = useContext(StoreContext);\n  \n  const { levelData } = useContext(StoreContext);\n\n  return (\n    <S.Footer>\n      <Legend />\n      <S.TextInput value={text} error={error} placeholder={'enter a regex and hit enter'} type=\"text\" onChange={(e) => { updateText(e.target.value)}} onKeyDown={e => onKeyDown(e.key, e.target.value, submitText)} />\n      <S.Buttons>\n        <S.LevelInfo><p>{`level: ${levelData.label} hostiles: ${levelData.hostiles}`}</p></S.LevelInfo>\n        <S.PrevButton onClick={e => nextLevel()}><p>{'>'}</p></S.PrevButton>\n        <S.NextButton onClick={e => prevLevel()}><p>{'<'}</p></S.NextButton>\n        <S.StartButton onClick={e => restartGame()}><p>{'RESTART'}</p></S.StartButton> \n      </S.Buttons>\n      <S.Available>\n        <S.ActiveExpressions key={-1} active={false}>{'available: '}</S.ActiveExpressions>\n        {activeExpressions.map((a,i) => (\n          <S.ActiveExpressions key={i} active={a.active}>{a.value}</S.ActiveExpressions>\n        ))}\n      </S.Available>\n    </S.Footer>\n  );\n}\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { getColor } from '../util/theme';\n\nconst S = {};\nS.Bg = styled('div')`\n  width:100%;\n  height:100%;\n  background-color: ${getColor('black')};\n  overflow:hidden;\n  position:absolute;\n  left:0;\n  top:0;\n  right:0;\n  bottom:0;\n\n\n  h1{\n    color:white;\n    font-size:15rem;\n    opacity:.05;\n\n    word-break: break-all;\n  }\n`;\n\nS.Grid = styled('div')`\n  position:absolute;\n  left:0;\n  top:0;\n  right:0;\n  bottom:0;\n  opacity: .5;\n\n  background-image:\n      repeating-linear-gradient(${getColor('grey')} 0 .2rem, transparent .2rem 100%),\n      repeating-linear-gradient(90deg, ${getColor('grey')} 0 .2rem, transparent .2rem 100%);\n  background-size: 2rem 2rem;\n\n  height:calc(100% + 2rem);\n  animation-duration: 3s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-direction: normal;\n\n  @keyframes grid-mover {\n    from {\n      transform: translate3d(0, 0, 0)\n    }\n    to {\n      transform: translate3d(0, -2rem, 0)\n    }\n  }\n\n  animation-name: grid-mover;\n`\n\n\n\n\n\n\n\nfunction Bg() {\n\n  return (\n    <S.Bg>\n      {/* <h1>{'/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/Regex!nv@ders/'}</h1> */}\n      <S.Grid/>\n    </S.Bg>\n  );\n}\n\nexport default Bg;\n","import styled from 'styled-components';\nimport { useContext, useMemo } from 'react';\nimport { getColor } from '../util/theme';\nimport { StoreContext } from '../store/context';\n\nimport Hostiles from './entities/hostiles';\nimport Friendlies from './entities/friendlies';\nimport Footer from './footer';\nimport Bg from './bg';\n\nconst S = {};\nS.Main = styled('div')`\n  overflow:hidden;\n\n  position:absolute;\n  left:0;\n  top:0;\n  right:0;\n  bottom:0;\n\n  display: grid;\n  grid-template-columns: [col] 5rem [col] auto [col] 5rem;\n  grid-template-rows: [row] auto [row] 30% [row] 10rem;\n`\n\nS.Hostiles = styled('div')`\n  grid-column: col 1 / span 3;\n  grid-row: row 1 / span 1 ;\n\n  ${'' /* border: 2px solid red; */}\n  border-bottom: 4px dashed ${getColor('red')}\n`\nS.Friendlies = styled('div')`\n  grid-column: col 1 / span 3;\n  grid-row: row 2 / span 1 ;\n  border-bottom: 4px dashed ${getColor('green')};\n\n  position:relative;\n  \n  ${'' /* border: 2px solid green; */}\n`\nS.Input = styled('div')`\n  grid-column: col 1 / span 3;\n  grid-row: row 3 / span 1 ;\n  background-color: ${getColor('black')};\n`\n\nS.Bg = styled('div')`\n  grid-column: col 1 / span 3;\n  grid-row: row 1 / span 2 ;\n  z-index:-1;\n`\n\nfunction Main() {\n  const { levelData } = useContext(StoreContext);\n\n  return (\n    <S.Main >\n      <S.Hostiles>\n        <Hostiles numEnemies={ levelData.enemies }/>\n      </S.Hostiles>\n      <S.Friendlies>\n        <Friendlies/>\n      </S.Friendlies>\n      <S.Input>\n        <Footer/>\n      </S.Input>\n      <S.Bg>\n        <Bg/>\n      </S.Bg>\n    </S.Main>\n  );\n}\n\nexport default Main;\n","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { StoreContext } from './context';\nimport data from './data.json';\n\nimport { generateFromWordList, matchWithinThisGroup, WORD_LIST_HOSTILE, WORD_LIST_FRIENDLY } from '../util';\n\nfunction Store({children}) {\n  const [ loaded, setLoaded ] = useState(false);\n  const [ text, setText ] = useState('');\n  const [ activeText, setActiveText ] = useState('');\n  const [ entities, setEntities ] = useState([]);\n  const [ matchedIdxs, setMatchedIdxs ] = useState([]);\n  const [ attackedIdxs, setAttackedIdxs ] = useState([]);\n  const [ killedIdxs, setKilledIdxs ] = useState([]);\n  const [ killActive, setKillActive ] = useState(false);\n  const [ error, setError ] = useState('');\n  const [ levelDefinitions ] = useState(data.levels);\n  const [ expressions ] = useState(data.expressions);\n  const [ levelIdx, setLevelIdx ] = useState(0);\n  const [ score, setScore ] = useState(0);\n\n  const onError = (e) => {\n    setError(e)\n  }\n\n  const levelData = useMemo(() => (\n    {\n      idx: levelIdx,\n      label: levelIdx + 1,\n      ...levelDefinitions[levelIdx]\n    }\n  ),[ levelIdx, levelDefinitions ]);\n  \n  const activeHostiles = useMemo(() => \n    levelData.hostiles\n  , [ levelData ]);\n\n  const activeFriendlies = useMemo(() => \n    levelData.friendlies\n  , [ levelData ]);\n\n  useEffect(() => {\n    const matchedIdxs = matchWithinThisGroup(entities, text, onError);\n    setMatchedIdxs(matchedIdxs);\n  }, [ text, entities, setMatchedIdxs ]);\n\n  useEffect(() => {\n    const matchedIdxs = matchWithinThisGroup(entities, activeText, onError);\n    setAttackedIdxs(matchedIdxs);\n  }, [ activeText, entities, setAttackedIdxs ]);\n\n  const generateEntities = useCallback(() => {\n    let friendlies = generateFromWordList(-1, activeFriendlies).map((tE, i) => {\n      return {\n        text: tE,\n        idx: i,\n        posIdx: i,\n        type: 'friendly'\n      };\n    });\n\n    let hostiles = generateFromWordList(-1, activeHostiles).map((tE, i) => {\n      return {\n        text: tE,\n        idx: i + friendlies.length,\n        posIdx: i,\n        type: 'hostile'\n      };\n    });\n\n    setEntities(friendlies.concat(hostiles));\n  }, [ setEntities, activeHostiles, activeFriendlies ]);\n\n\n  useEffect(() => {\n    if(!loaded){\n      setLoaded(true);\n      // generateEntities();\n    }\n  }, [ loaded, generateEntities ]); \n\n  \n  const getMatchedEntities = useCallback((type = 'hostile') => {\n    return entities.filter(e => e.type === type).map(e => {\n      const isKilled = killedIdxs.includes(e.idx);\n      return {\n        ...e,\n        isMatched: !isKilled && matchedIdxs.includes(e.idx),\n        isAttacked: !isKilled && attackedIdxs.includes(e.idx),\n        isKilled: isKilled\n      }\n    });\n  }, [ entities, matchedIdxs, attackedIdxs, killedIdxs ]);\n\n  useEffect(() => {\n    if(killActive){\n      let newDeaths = [];\n      attackedIdxs.forEach(idx => {\n        if(!killedIdxs.includes(idx)){\n          newDeaths.push(idx);\n        }\n      });\n  \n      if(newDeaths.length > 0){\n        setKilledIdxs(killedIdxs.concat(newDeaths));\n      }\n\n      setKillActive(false);\n    }\n  }, [ killActive, setKillActive, attackedIdxs, killedIdxs, setKilledIdxs ]);\n\n\n  let textTimer = null;\n  const killTextTimer = () => {\n    if(textTimer){\n      window.clearTimeout(textTimer);\n      textTimer = null;\n    }\n  }\n  const startTextTimer = () => {\n    killTextTimer();\n    textTimer = window.setTimeout(() => {\n      setKillActive(true);\n      setActiveText('');\n    }, 1000);\n  }\n  const updateText = useCallback((text) => {\n    setError('');\n    setText(text);\n  }, [ setText, setError ]);\n  \n  const submitText = useCallback((text) => {\n    setActiveText(text);\n    setText('');\n    startTextTimer();\n  }, [ setActiveText, startTextTimer ]);\n\n\n  const setLevel = useCallback((levelIdx) => {\n    setMatchedIdxs([]);\n    setKilledIdxs([]);\n    setAttackedIdxs([]);\n\n    setLevelIdx(levelIdx);\n  });\n    \n  const nextLevel = useCallback(() => {\n    if(levelIdx < levelDefinitions.length - 1){\n      setLevel(levelIdx + 1);\n    }else{\n      console.error('TODO: end of game')\n    }\n  }, [ levelIdx, levelDefinitions, setLevel ]);\n  \n  const prevLevel = useCallback(() => {\n    if(levelIdx > 0){\n      setLevel(levelIdx - 1);\n    }else{\n      console.error('TODO: already on first level')\n    }\n  }, [ levelIdx, setLevel ]);\n\n  useEffect(() => {\n    generateEntities();\n  }, [ levelIdx ]); \n\n  const restartGame = useCallback(() => {\n    setLevel(0);\n  }, [ setLevel ]);\n\n  const activeExpressions = useMemo(() =>\n    expressions.map(exp => ({\n      value: exp.value,\n      active: levelData.expressions.includes(exp.value)\n    })), [ levelData, expressions ]);\n\n\n  return (\n    <StoreContext.Provider \n      value={{\n        text: text,\n        updateText: updateText,\n        entities: entities,\n        matchedIdxs: matchedIdxs,\n        attackedIdxs: attackedIdxs,\n        killedIdxs: killedIdxs,\n        generateEntities: generateEntities,\n        getMatchedEntities: getMatchedEntities,\n        restartGame: restartGame,\n        submitText: submitText,\n        activeText: activeText,\n        activeExpressions: activeExpressions,\n        levelData: levelData,\n        nextLevel: nextLevel,\n        prevLevel: prevLevel,\n        score: score,\n        setScore: setScore,\n        error: error\n      }}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport default Store;\n","import './App.css';\nimport Main from './components/main';\nimport Store from './store';\n\nfunction App() {\n  return (\n    <Store>\n      <Main/>\n    </Store>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}